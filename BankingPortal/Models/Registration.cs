
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace BankingPortal.Models
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.Web.Mvc;

    public partial class Registration
    {

        //[HiddenInput(DisplayValue = false)]
        [Display(Name = "Account Number")]
        public long AccountNumber { get; set; }

        [Required(AllowEmptyStrings = false, ErrorMessage = "Title required")]
        [Display(Name = "Title")]
        public string Title { get; set; }

        [Required(AllowEmptyStrings = false, ErrorMessage = "First Name required")]
        [Display(Name = "First Name")]
        public string FirstName { get; set; }

        [Required(AllowEmptyStrings = false, ErrorMessage = "Last Name required")]
        [Display(Name = "Last Name")]
        public string LastName { get; set; }

        [Required(AllowEmptyStrings = false, ErrorMessage = "Father's Name required")]
        [Display(Name = "Father's Name")]
        public string FatherName { get; set; }

        [Required(AllowEmptyStrings = false, ErrorMessage = "Date Of Birth required")]
        [Display(Name = "Date Of Birth")]
        [DataType(DataType.Date)]
        public System.DateTime DOB { get; set; }

        [Required(AllowEmptyStrings = false, ErrorMessage = "Mobile Number required")]
        [Display(Name = "Mobile Number")]
        [DataType(DataType.PhoneNumber)]
        [RegularExpression(@"^\(?([0-9]{3})\)?[-. ]?([0-9]{3})[-. ]?([0-9]{4})$", ErrorMessage = "Entered phone format is not valid.")]
        public string MobileNumber { get; set; }

        [Required(AllowEmptyStrings = false, ErrorMessage = "Email ID required")]
        [Display(Name = "Email ID")]
        [DataType(DataType.EmailAddress)]
        [RegularExpression("^[a-zA-Z0-9_\\.-]+@([a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,6}$", ErrorMessage = "E-mail id is not valid")]
        public string Email { get; set; }

        [Required(AllowEmptyStrings = false, ErrorMessage = "Aadhar Number required")]
        [Display(Name = "Aadhar Number")]
        public string AadharNumber { get; set; }

        [Required(AllowEmptyStrings = false, ErrorMessage = "Address required")]
        [Display(Name = "Address")]
        public string Address { get; set; }

        [Required(AllowEmptyStrings = false, ErrorMessage = "Landmark required")]
        [Display(Name = "Landmark")]
        public string Landmark { get; set; }

        [Required(AllowEmptyStrings = false, ErrorMessage = "State required")]
        [Display(Name = "State")]
        public string State { get; set; }

        [Required(AllowEmptyStrings = false, ErrorMessage = "City required")]
        [Display(Name = "City")]
        public string City { get; set; }

        [Required(AllowEmptyStrings = false, ErrorMessage = "Pincode required")]
        [Display(Name = "Pincode")]
        public string Pincode { get; set; }

        [Required(AllowEmptyStrings = false, ErrorMessage = "Occupation Type required")]
        [Display(Name = "Occupation Type")]
        public string OccupationType { get; set; }

        [Required(AllowEmptyStrings = false, ErrorMessage = "Source Of Income required")]
        [Display(Name = "Source Of Income")]
        public string IncomeSource { get; set; }

        [Required(AllowEmptyStrings = false, ErrorMessage = "Gross Annual Income required")]
        [Display(Name = "Gross Annual Income")]
        public string GrossIncome { get; set; }

        [HiddenInput(DisplayValue = false)]
        public int Status { get; set; }
        [Display(Name = "Account Type")]
        public string AccountType { get; set; }

        public string Remark { get; set; }
    }
}